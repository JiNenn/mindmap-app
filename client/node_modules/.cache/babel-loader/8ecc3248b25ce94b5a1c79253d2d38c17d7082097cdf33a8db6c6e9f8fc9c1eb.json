{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\treev\\\\mindmap-app\\\\client\\\\src\\\\components\\\\ThankButton.js\",\n  _s = $RefreshSig$();\n// client/src/components/ThankButton.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n// SNSで匿名IDを管理する場合などがあれば下記を使う（必要なら）\n// import { getAnonymousId } from '../utils/anonymousId';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || 'http://localhost:4000';\nfunction ThankButton({\n  mindmapId\n}) {\n  _s();\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [thankCount, setThankCount] = useState(0);\n  const fetchThankCount = async () => {\n    try {\n      const res = await axios.get(`${SERVER_URL}/api/thank/${mindmapId}`);\n      setThankCount(res.data.count);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    fetchThankCount();\n  }, [mindmapId]);\n  const handleThank = async () => {\n    if (isDisabled) return;\n    setIsDisabled(true);\n    try {\n      // もし匿名IDが必要なら以下のように付与する\n      // const anonymousId = getAnonymousId();\n      await axios.post(`${SERVER_URL}/api/thank`, {\n        mindmapId /*, anonymousId */\n      });\n      await fetchThankCount();\n      alert('ありがとうを送りました！');\n      // 1分間（60000ms）ボタンを無効化\n      setTimeout(() => {\n        setIsDisabled(false);\n      }, 60000);\n    } catch (err) {\n      console.error(err);\n      setIsDisabled(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleThank,\n      disabled: isDisabled,\n      children: isDisabled ? '1分間お待ちください' : 'ありがとうを送る'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u73FE\\u5728\\u306E\\u3042\\u308A\\u304C\\u3068\\u3046\\u6570: \", thankCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ThankButton, \"ICexsEC24YMSjkVSoH2SZ8YDSaA=\");\n_c = ThankButton;\nexport default ThankButton;\nvar _c;\n$RefreshReg$(_c, \"ThankButton\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SERVER_URL","process","env","REACT_APP_SERVER_URL","ThankButton","mindmapId","_s","isDisabled","setIsDisabled","thankCount","setThankCount","fetchThankCount","res","get","data","count","err","console","error","handleThank","post","alert","setTimeout","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/treev/mindmap-app/client/src/components/ThankButton.js"],"sourcesContent":["// client/src/components/ThankButton.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n// SNSで匿名IDを管理する場合などがあれば下記を使う（必要なら）\r\n// import { getAnonymousId } from '../utils/anonymousId';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || 'http://localhost:4000';\r\n\r\nfunction ThankButton({ mindmapId }) {\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [thankCount, setThankCount] = useState(0);\r\n\r\n  const fetchThankCount = async () => {\r\n    try {\r\n      const res = await axios.get(`${SERVER_URL}/api/thank/${mindmapId}`);\r\n      setThankCount(res.data.count);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchThankCount();\r\n  }, [mindmapId]);\r\n\r\n  const handleThank = async () => {\r\n    if (isDisabled) return;\r\n    setIsDisabled(true);\r\n    try {\r\n      // もし匿名IDが必要なら以下のように付与する\r\n      // const anonymousId = getAnonymousId();\r\n      await axios.post(`${SERVER_URL}/api/thank`, { mindmapId /*, anonymousId */ });\r\n      await fetchThankCount();\r\n      alert('ありがとうを送りました！');\r\n      // 1分間（60000ms）ボタンを無効化\r\n      setTimeout(() => {\r\n        setIsDisabled(false);\r\n      }, 60000);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setIsDisabled(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleThank} disabled={isDisabled}>\r\n        {isDisabled ? '1分間お待ちください' : 'ありがとうを送る'}\r\n      </button>\r\n      <p>現在のありがとう数: {thankCount}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThankButton;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,IAAI,uBAAuB;AAE9E,SAASC,WAAWA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMgB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,GAAGb,UAAU,cAAcK,SAAS,EAAE,CAAC;MACnEK,aAAa,CAACE,GAAG,CAACE,IAAI,CAACC,KAAK,CAAC;IAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACde,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EAEf,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIZ,UAAU,EAAE;IAChBC,aAAa,CAAC,IAAI,CAAC;IACnB,IAAI;MACF;MACA;MACA,MAAMX,KAAK,CAACuB,IAAI,CAAC,GAAGpB,UAAU,YAAY,EAAE;QAAEK,SAAS,CAAC;MAAmB,CAAC,CAAC;MAC7E,MAAMM,eAAe,CAAC,CAAC;MACvBU,KAAK,CAAC,cAAc,CAAC;MACrB;MACAC,UAAU,CAAC,MAAM;QACfd,aAAa,CAAC,KAAK,CAAC;MACtB,CAAC,EAAE,KAAK,CAAC;IACX,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBR,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACET,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAQyB,OAAO,EAAEL,WAAY;MAACM,QAAQ,EAAElB,UAAW;MAAAgB,QAAA,EAChDhB,UAAU,GAAG,YAAY,GAAG;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACT9B,OAAA;MAAAwB,QAAA,GAAG,0DAAW,EAACd,UAAU;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAACvB,EAAA,CA5CQF,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AA8CpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}