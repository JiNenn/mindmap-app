{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\treev\\\\mindmap-app\\\\client\\\\src\\\\components\\\\MindmapCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ThankButton from './ThankButton';\n\n/**\r\n * ノードと線を描く編集キャンバス\r\n * - 各ノードは絶対配置され、ドラッグ＆ドロップで移動可能\r\n * - 背景の SVG レイヤーで、中心ノード（先頭ノード）から各子ノードまでの線を描画\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MindmapCanvas({\n  mindmap,\n  setMindmap\n}) {\n  _s();\n  const [dragging, setDragging] = useState({\n    isDragging: false,\n    nodeIndex: null,\n    offsetX: 0,\n    offsetY: 0\n  });\n\n  // 固定のノードサイズ（中心計算用）\n  const nodeWidth = 120;\n  const nodeHeight = 40;\n\n  // ノード上でマウスダウン：ドラッグ開始\n  const handleMouseDown = (e, index) => {\n    const rect = e.target.getBoundingClientRect();\n    const offsetX = e.clientX - rect.left;\n    const offsetY = e.clientY - rect.top;\n    setDragging({\n      isDragging: true,\n      nodeIndex: index,\n      offsetX,\n      offsetY\n    });\n  };\n\n  // キャンバス上でマウス移動：ドラッグ中のノード位置更新\n  const handleMouseMove = e => {\n    if (!dragging.isDragging) return;\n    const containerRect = e.currentTarget.getBoundingClientRect();\n    const newX = e.clientX - containerRect.left - dragging.offsetX;\n    const newY = e.clientY - containerRect.top - dragging.offsetY;\n    const newNodes = [...mindmap.nodes];\n    newNodes[dragging.nodeIndex] = {\n      ...newNodes[dragging.nodeIndex],\n      x: newX,\n      y: newY\n    };\n    setMindmap({\n      ...mindmap,\n      nodes: newNodes\n    });\n  };\n\n  // マウスアップでドラッグ終了\n  const handleMouseUp = () => {\n    setDragging({\n      isDragging: false,\n      nodeIndex: null,\n      offsetX: 0,\n      offsetY: 0\n    });\n  };\n\n  // ノードの中心座標を計算（線描画用）\n  const getNodeCenter = node => ({\n    cx: node.x + nodeWidth / 2,\n    cy: node.y + nodeHeight / 2\n  });\n\n  // 親子関係の想定：先頭ノードを中心の「テーマ」とし、その他を子ノードとする\n  const parentNode = mindmap.nodes[0];\n  const childNodes = mindmap.nodes.slice(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '500px',\n      border: '1px solid #777',\n      overflow: 'hidden'\n    },\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%'\n      },\n      children: parentNode && childNodes.map((node, index) => {\n        const parentCenter = getNodeCenter(parentNode);\n        const childCenter = getNodeCenter(node);\n        return /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: parentCenter.cx,\n          y1: parentCenter.cy,\n          x2: childCenter.cx,\n          y2: childCenter.cy,\n          stroke: \"black\",\n          strokeWidth: \"2\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), mindmap.nodes.map((node, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: node.x,\n        top: node.y,\n        width: nodeWidth,\n        height: nodeHeight,\n        padding: '8px',\n        background: idx === 0 ? '#ffe4b2' : '#d1f0d1',\n        border: '1px solid #333',\n        borderRadius: '4px',\n        cursor: 'move',\n        userSelect: 'none',\n        textAlign: 'center',\n        lineHeight: `${nodeHeight - 16}px`\n      },\n      onMouseDown: e => handleMouseDown(e, idx),\n      children: node.text\n    }, node.nodeId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: 10,\n        left: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(ThankButton, {\n        mindmapId: mindmap.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(MindmapCanvas, \"ItWAAUPyKFzr1J4tTcQkoKisjjQ=\");\n_c = MindmapCanvas;\nexport default MindmapCanvas;\nvar _c;\n$RefreshReg$(_c, \"MindmapCanvas\");","map":{"version":3,"names":["React","useState","ThankButton","jsxDEV","_jsxDEV","MindmapCanvas","mindmap","setMindmap","_s","dragging","setDragging","isDragging","nodeIndex","offsetX","offsetY","nodeWidth","nodeHeight","handleMouseDown","e","index","rect","target","getBoundingClientRect","clientX","left","clientY","top","handleMouseMove","containerRect","currentTarget","newX","newY","newNodes","nodes","x","y","handleMouseUp","getNodeCenter","node","cx","cy","parentNode","childNodes","slice","style","position","width","height","border","overflow","onMouseMove","onMouseUp","children","map","parentCenter","childCenter","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","idx","padding","background","borderRadius","cursor","userSelect","textAlign","lineHeight","onMouseDown","text","nodeId","bottom","mindmapId","id","_c","$RefreshReg$"],"sources":["C:/Users/treev/mindmap-app/client/src/components/MindmapCanvas.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ThankButton from './ThankButton';\r\n\r\n/**\r\n * ノードと線を描く編集キャンバス\r\n * - 各ノードは絶対配置され、ドラッグ＆ドロップで移動可能\r\n * - 背景の SVG レイヤーで、中心ノード（先頭ノード）から各子ノードまでの線を描画\r\n */\r\nfunction MindmapCanvas({ mindmap, setMindmap }) {\r\n  const [dragging, setDragging] = useState({\r\n    isDragging: false,\r\n    nodeIndex: null,\r\n    offsetX: 0,\r\n    offsetY: 0,\r\n  });\r\n\r\n  // 固定のノードサイズ（中心計算用）\r\n  const nodeWidth = 120;\r\n  const nodeHeight = 40;\r\n\r\n  // ノード上でマウスダウン：ドラッグ開始\r\n  const handleMouseDown = (e, index) => {\r\n    const rect = e.target.getBoundingClientRect();\r\n    const offsetX = e.clientX - rect.left;\r\n    const offsetY = e.clientY - rect.top;\r\n    setDragging({ isDragging: true, nodeIndex: index, offsetX, offsetY });\r\n  };\r\n\r\n  // キャンバス上でマウス移動：ドラッグ中のノード位置更新\r\n  const handleMouseMove = (e) => {\r\n    if (!dragging.isDragging) return;\r\n    const containerRect = e.currentTarget.getBoundingClientRect();\r\n    const newX = e.clientX - containerRect.left - dragging.offsetX;\r\n    const newY = e.clientY - containerRect.top - dragging.offsetY;\r\n    const newNodes = [...mindmap.nodes];\r\n    newNodes[dragging.nodeIndex] = { ...newNodes[dragging.nodeIndex], x: newX, y: newY };\r\n    setMindmap({ ...mindmap, nodes: newNodes });\r\n  };\r\n\r\n  // マウスアップでドラッグ終了\r\n  const handleMouseUp = () => {\r\n    setDragging({ isDragging: false, nodeIndex: null, offsetX: 0, offsetY: 0 });\r\n  };\r\n\r\n  // ノードの中心座標を計算（線描画用）\r\n  const getNodeCenter = (node) => ({\r\n    cx: node.x + nodeWidth / 2,\r\n    cy: node.y + nodeHeight / 2,\r\n  });\r\n\r\n  // 親子関係の想定：先頭ノードを中心の「テーマ」とし、その他を子ノードとする\r\n  const parentNode = mindmap.nodes[0];\r\n  const childNodes = mindmap.nodes.slice(1);\r\n\r\n  return (\r\n    <div \r\n      style={{ \r\n        position: 'relative', \r\n        width: '100%', \r\n        height: '500px', \r\n        border: '1px solid #777',\r\n        overflow: 'hidden'\r\n      }}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseUp={handleMouseUp}\r\n    >\r\n      {/* SVGレイヤー：中心ノードから各子ノードへ線を描画 */}\r\n      <svg\r\n        style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}\r\n      >\r\n        {parentNode &&\r\n          childNodes.map((node, index) => {\r\n            const parentCenter = getNodeCenter(parentNode);\r\n            const childCenter = getNodeCenter(node);\r\n            return (\r\n              <line \r\n                key={index}\r\n                x1={parentCenter.cx}\r\n                y1={parentCenter.cy}\r\n                x2={childCenter.cx}\r\n                y2={childCenter.cy}\r\n                stroke=\"black\"\r\n                strokeWidth=\"2\"\r\n              />\r\n            );\r\n          })}\r\n      </svg>\r\n      {/* ノードの描画（ドラッグ＆ドロップ可能） */}\r\n      {mindmap.nodes.map((node, idx) => (\r\n        <div\r\n          key={node.nodeId}\r\n          style={{\r\n            position: 'absolute',\r\n            left: node.x,\r\n            top: node.y,\r\n            width: nodeWidth,\r\n            height: nodeHeight,\r\n            padding: '8px',\r\n            background: idx === 0 ? '#ffe4b2' : '#d1f0d1',\r\n            border: '1px solid #333',\r\n            borderRadius: '4px',\r\n            cursor: 'move',\r\n            userSelect: 'none',\r\n            textAlign: 'center',\r\n            lineHeight: `${nodeHeight - 16}px`,\r\n          }}\r\n          onMouseDown={(e) => handleMouseDown(e, idx)}\r\n        >\r\n          {node.text}\r\n        </div>\r\n      ))}\r\n      {/* キャンバス下部に「ありがとう」ボタンを配置 */}\r\n      <div style={{ position: 'absolute', bottom: 10, left: 10 }}>\r\n        <ThankButton mindmapId={mindmap.id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MindmapCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}