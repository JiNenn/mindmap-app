{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\treev\\\\mindmap-app\\\\client\\\\src\\\\pages\\\\ExportMarkdown.js\",\n  _s = $RefreshSig$();\n// client/src/pages/ExportMarkdown.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { marked } from 'marked';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || 'http://localhost:4000';\nconst MAX_DEPTH = 7;\nfunction ExportMarkdown() {\n  _s();\n  const {\n    mindmapId\n  } = useParams();\n  const navigate = useNavigate();\n  const [mindmap, setMindmap] = useState(null);\n  const [markdownText, setMarkdownText] = useState('');\n  const [copyMode, setCopyMode] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 「コピーしました」メッセージの制御用\n  const [copyMessage, setCopyMessage] = useState('');\n  useEffect(() => {\n    if (mindmapId) {\n      fetchMindmap();\n    }\n    // eslint-disable-next-line\n  }, [mindmapId]);\n  useEffect(() => {\n    if (mindmap) {\n      const numberedNodes = buildNumberedTree(mindmap);\n      const md = convertToMarkdown(numberedNodes);\n      setMarkdownText(md);\n    }\n  }, [mindmap]);\n  const fetchMindmap = async () => {\n    try {\n      const res = await axios.get(`${SERVER_URL}/api/mindmaps/${mindmapId}`);\n      setMindmap(res.data);\n    } catch (err) {\n      console.error(err);\n      setError('マインドマップを取得できませんでした');\n    }\n  };\n\n  // ------------------------------------------------\n  // ツリー構築 & Markdown生成\n  // ------------------------------------------------\n\n  const buildNumberedTree = mapData => {\n    const {\n      nodes,\n      edges\n    } = mapData;\n    if (!nodes || nodes.length === 0) return [];\n\n    // ノードID -> インバウンド数\n    const inboundCountMap = {};\n    nodes.forEach(node => {\n      inboundCountMap[node.nodeId] = 0;\n    });\n    edges === null || edges === void 0 ? void 0 : edges.forEach(edge => {\n      if (inboundCountMap[edge.to] != null) {\n        inboundCountMap[edge.to]++;\n      }\n    });\n\n    // ルートノード判定\n    const rootNodes = nodes.filter(n => inboundCountMap[n.nodeId] === 0);\n    const rootNode = rootNodes[0] || nodes[0];\n    if (!rootNode) return [];\n\n    // ノードID -> ノード\n    const nodeMap = {};\n    nodes.forEach(nd => {\n      nodeMap[nd.nodeId] = nd;\n    });\n\n    // 親 -> 子ノードID のマップ\n    const childrenMap = {};\n    nodes.forEach(nd => {\n      childrenMap[nd.nodeId] = [];\n    });\n    edges === null || edges === void 0 ? void 0 : edges.forEach(edge => {\n      if (childrenMap[edge.from]) {\n        childrenMap[edge.from].push(edge.to);\n      }\n    });\n    // ソート\n    Object.keys(childrenMap).forEach(key => {\n      childrenMap[key].sort((a, b) => {\n        const idxA = nodes.findIndex(n => n.nodeId === a);\n        const idxB = nodes.findIndex(n => n.nodeId === b);\n        return idxA - idxB;\n      });\n    });\n    const result = [];\n    const dfs = (nodeId, numbering) => {\n      const depth = numbering.split('.').length;\n      if (depth > MAX_DEPTH) return;\n      const nodeObj = nodeMap[nodeId];\n      if (!nodeObj) return;\n      result.push({\n        numbering,\n        text: nodeObj.text || ''\n      });\n      const childs = childrenMap[nodeId] || [];\n      childs.forEach((childId, index) => {\n        const newNumber = `${numbering}.${index + 1}`;\n        dfs(childId, newNumber);\n      });\n    };\n    dfs(rootNode.nodeId, '1');\n    return result;\n  };\n  const convertToMarkdown = numberedNodes => {\n    let md = '';\n    numberedNodes.forEach(item => {\n      const level = item.numbering.split('.').length;\n      md += `${'#'.repeat(level)} ${item.numbering}\\n`;\n      md += `${item.text}\\n\\n`;\n    });\n    return md.trim();\n  };\n\n  // ------------------------------------------------\n  // コピー関連\n  // ------------------------------------------------\n\n  // 「コピーしました」メッセージを一定時間表示して消す\n  const showCopyMessage = () => {\n    setCopyMessage('コピーしました');\n    setTimeout(() => {\n      setCopyMessage('');\n    }, 1500); // 1.5秒後に消える\n  };\n\n  // セクション単位コピー\n  const handleCopySection = sectionText => {\n    navigator.clipboard.writeText(sectionText).then(() => {\n      showCopyMessage();\n    });\n  };\n\n  // ★ 追加：全てコピーする\n  const handleCopyAll = () => {\n    navigator.clipboard.writeText(markdownText).then(() => {\n      showCopyMessage();\n    });\n  };\n  const handleClone = async () => {\n    try {\n      // 複製用エンドポイントを呼び出す（認証ヘッダー付き）\n      const token = localStorage.getItem('token');\n      const res = await axios.post(`${SERVER_URL}/api/mindmaps/${mindmapId}/clone`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      // 複製に成功したらマイページへ遷移する\n      navigate('/mypage');\n    } catch (err) {\n      console.error(err);\n      alert('複製に失敗しました');\n    }\n  };\n\n  // ------------------------------------------------\n  // Render\n  // ------------------------------------------------\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u30A8\\u30E9\\u30FC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  }\n  if (!mindmap) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 12\n    }, this);\n  }\n\n  // コピーモード表示\n  const renderMarkdownWithCopy = md => {\n    const lines = md.split('\\n');\n    const sections = [];\n    let currentSection = [];\n    lines.forEach(line => {\n      if (line.startsWith('#')) {\n        if (currentSection.length > 0) {\n          sections.push(currentSection);\n        }\n        currentSection = [line];\n      } else {\n        currentSection.push(line);\n      }\n    });\n    if (currentSection.length > 0) {\n      sections.push(currentSection);\n    }\n    return sections.map((sectionLines, idx) => {\n      const sectionText = sectionLines.join('\\n');\n      if (!copyMode) {\n        // 通常モード\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '1em'\n          },\n          dangerouslySetInnerHTML: {\n            __html: marked.parse(sectionText, {\n              breaks: true\n            })\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this);\n      }\n      // コピーモード：セクション全体に hover/click イベント付与\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          cursor: 'pointer',\n          marginBottom: '1em'\n        },\n        onMouseOver: e => e.currentTarget.style.backgroundColor = '#ffffa0',\n        onMouseOut: e => e.currentTarget.style.backgroundColor = 'transparent',\n        onClick: () => handleCopySection(sectionText),\n        dangerouslySetInnerHTML: {\n          __html: marked.parse(sectionText, {\n            breaks: true\n          })\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: {\n        position: 'relative',\n        background: '#f5f5f5',\n        borderBottom: '1px solid #ccc',\n        padding: '10px 20px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/mypage'),\n          style: {\n            background: '#007BFF',\n            color: '#fff',\n            border: 'none',\n            padding: '8px 12px',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"\\u30DB\\u30FC\\u30E0\\u3078\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(`/editor/${mindmapId}`),\n          style: {\n            background: '#6c757d',\n            color: '#fff',\n            border: 'none',\n            padding: '8px 12px',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"Editor\\u3078\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: 0,\n          fontSize: '20px'\n        },\n        children: [mindmap.title, \" - Export\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCopyMode(!copyMode),\n          style: {\n            background: copyMode ? '#dc3545' : '#28a745',\n            color: '#fff',\n            border: 'none',\n            padding: '8px 16px',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: copyMode ? 'コピーモードOFF' : 'コピーモードON'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCopyAll,\n          style: {\n            background: '#ffc107',\n            border: 'none',\n            padding: '8px 16px',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"\\u5168\\u3066\\u30B3\\u30D4\\u30FC\\u3059\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), copyMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#c3e6cb',\n        color: '#155724',\n        padding: '10px',\n        margin: '10px 20px',\n        borderRadius: '4px'\n      },\n      children: copyMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        flexGrow: 1,\n        overflowY: 'auto',\n        padding: '20px'\n      },\n      children: renderMarkdownWithCopy(markdownText)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      style: {\n        background: '#f5f5f5',\n        borderTop: '1px solid #ccc',\n        textAlign: 'center',\n        padding: '10px 20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          color: '#888'\n        },\n        children: \"\\xA9 2025 MindMap App. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\n_s(ExportMarkdown, \"8GJIqvFGVOicFhXtBN2XYKzwvnE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ExportMarkdown;\nexport default ExportMarkdown;\nvar _c;\n$RefreshReg$(_c, \"ExportMarkdown\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","marked","jsxDEV","_jsxDEV","SERVER_URL","process","env","REACT_APP_SERVER_URL","MAX_DEPTH","ExportMarkdown","_s","mindmapId","navigate","mindmap","setMindmap","markdownText","setMarkdownText","copyMode","setCopyMode","error","setError","copyMessage","setCopyMessage","fetchMindmap","numberedNodes","buildNumberedTree","md","convertToMarkdown","res","get","data","err","console","mapData","nodes","edges","length","inboundCountMap","forEach","node","nodeId","edge","to","rootNodes","filter","n","rootNode","nodeMap","nd","childrenMap","from","push","Object","keys","key","sort","a","b","idxA","findIndex","idxB","result","dfs","numbering","depth","split","nodeObj","text","childs","childId","index","newNumber","item","level","repeat","trim","showCopyMessage","setTimeout","handleCopySection","sectionText","navigator","clipboard","writeText","then","handleCopyAll","handleClone","token","localStorage","getItem","post","headers","Authorization","alert","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","renderMarkdownWithCopy","lines","sections","currentSection","line","startsWith","map","sectionLines","idx","join","marginBottom","dangerouslySetInnerHTML","__html","parse","breaks","cursor","onMouseOver","e","currentTarget","backgroundColor","onMouseOut","onClick","display","flexDirection","minHeight","position","background","borderBottom","alignItems","justifyContent","gap","color","border","borderRadius","margin","fontSize","title","flexGrow","overflowY","borderTop","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/treev/mindmap-app/client/src/pages/ExportMarkdown.js"],"sourcesContent":["// client/src/pages/ExportMarkdown.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { marked } from 'marked';\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || 'http://localhost:4000';\r\nconst MAX_DEPTH = 7;\r\n\r\nfunction ExportMarkdown() {\r\n  const { mindmapId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [mindmap, setMindmap] = useState(null);\r\n  const [markdownText, setMarkdownText] = useState('');\r\n  const [copyMode, setCopyMode] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // 「コピーしました」メッセージの制御用\r\n  const [copyMessage, setCopyMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (mindmapId) {\r\n      fetchMindmap();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [mindmapId]);\r\n\r\n  useEffect(() => {\r\n    if (mindmap) {\r\n      const numberedNodes = buildNumberedTree(mindmap);\r\n      const md = convertToMarkdown(numberedNodes);\r\n      setMarkdownText(md);\r\n    }\r\n  }, [mindmap]);\r\n\r\n  const fetchMindmap = async () => {\r\n    try {\r\n      const res = await axios.get(`${SERVER_URL}/api/mindmaps/${mindmapId}`);\r\n      setMindmap(res.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('マインドマップを取得できませんでした');\r\n    }\r\n  };\r\n\r\n  // ------------------------------------------------\r\n  // ツリー構築 & Markdown生成\r\n  // ------------------------------------------------\r\n\r\n  const buildNumberedTree = (mapData) => {\r\n    const { nodes, edges } = mapData;\r\n    if (!nodes || nodes.length === 0) return [];\r\n\r\n    // ノードID -> インバウンド数\r\n    const inboundCountMap = {};\r\n    nodes.forEach((node) => {\r\n      inboundCountMap[node.nodeId] = 0;\r\n    });\r\n    edges?.forEach((edge) => {\r\n      if (inboundCountMap[edge.to] != null) {\r\n        inboundCountMap[edge.to]++;\r\n      }\r\n    });\r\n\r\n    // ルートノード判定\r\n    const rootNodes = nodes.filter((n) => inboundCountMap[n.nodeId] === 0);\r\n    const rootNode = rootNodes[0] || nodes[0];\r\n    if (!rootNode) return [];\r\n\r\n    // ノードID -> ノード\r\n    const nodeMap = {};\r\n    nodes.forEach((nd) => {\r\n      nodeMap[nd.nodeId] = nd;\r\n    });\r\n\r\n    // 親 -> 子ノードID のマップ\r\n    const childrenMap = {};\r\n    nodes.forEach((nd) => {\r\n      childrenMap[nd.nodeId] = [];\r\n    });\r\n    edges?.forEach((edge) => {\r\n      if (childrenMap[edge.from]) {\r\n        childrenMap[edge.from].push(edge.to);\r\n      }\r\n    });\r\n    // ソート\r\n    Object.keys(childrenMap).forEach((key) => {\r\n      childrenMap[key].sort((a, b) => {\r\n        const idxA = nodes.findIndex((n) => n.nodeId === a);\r\n        const idxB = nodes.findIndex((n) => n.nodeId === b);\r\n        return idxA - idxB;\r\n      });\r\n    });\r\n\r\n    const result = [];\r\n    const dfs = (nodeId, numbering) => {\r\n      const depth = numbering.split('.').length;\r\n      if (depth > MAX_DEPTH) return;\r\n      const nodeObj = nodeMap[nodeId];\r\n      if (!nodeObj) return;\r\n\r\n      result.push({ numbering, text: nodeObj.text || '' });\r\n\r\n      const childs = childrenMap[nodeId] || [];\r\n      childs.forEach((childId, index) => {\r\n        const newNumber = `${numbering}.${index + 1}`;\r\n        dfs(childId, newNumber);\r\n      });\r\n    };\r\n    dfs(rootNode.nodeId, '1');\r\n    return result;\r\n  };\r\n\r\n  const convertToMarkdown = (numberedNodes) => {\r\n    let md = '';\r\n    numberedNodes.forEach((item) => {\r\n      const level = item.numbering.split('.').length;\r\n      md += `${'#'.repeat(level)} ${item.numbering}\\n`;\r\n      md += `${item.text}\\n\\n`;\r\n    });\r\n    return md.trim();\r\n  };\r\n\r\n  // ------------------------------------------------\r\n  // コピー関連\r\n  // ------------------------------------------------\r\n\r\n  // 「コピーしました」メッセージを一定時間表示して消す\r\n  const showCopyMessage = () => {\r\n    setCopyMessage('コピーしました');\r\n    setTimeout(() => {\r\n      setCopyMessage('');\r\n    }, 1500); // 1.5秒後に消える\r\n  };\r\n\r\n  // セクション単位コピー\r\n  const handleCopySection = (sectionText) => {\r\n    navigator.clipboard.writeText(sectionText).then(() => {\r\n      showCopyMessage();\r\n    });\r\n  };\r\n\r\n  // ★ 追加：全てコピーする\r\n  const handleCopyAll = () => {\r\n    navigator.clipboard.writeText(markdownText).then(() => {\r\n      showCopyMessage();\r\n    });\r\n  };\r\n\r\n  const handleClone = async () => {\r\n    try {\r\n      // 複製用エンドポイントを呼び出す（認証ヘッダー付き）\r\n      const token = localStorage.getItem('token');\r\n      const res = await axios.post(\r\n        `${SERVER_URL}/api/mindmaps/${mindmapId}/clone`,\r\n        {},\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      // 複製に成功したらマイページへ遷移する\r\n      navigate('/mypage');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('複製に失敗しました');\r\n    }\r\n  };\r\n\r\n  // ------------------------------------------------\r\n  // Render\r\n  // ------------------------------------------------\r\n\r\n  if (error) {\r\n    return (\r\n      <div style={{ padding: 20 }}>\r\n        <h1>エラー</h1>\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n  if (!mindmap) {\r\n    return <div style={{ padding: 20 }}>読み込み中...</div>;\r\n  }\r\n\r\n  // コピーモード表示\r\n  const renderMarkdownWithCopy = (md) => {\r\n    const lines = md.split('\\n');\r\n    const sections = [];\r\n    let currentSection = [];\r\n    lines.forEach((line) => {\r\n      if (line.startsWith('#')) {\r\n        if (currentSection.length > 0) {\r\n          sections.push(currentSection);\r\n        }\r\n        currentSection = [line];\r\n      } else {\r\n        currentSection.push(line);\r\n      }\r\n    });\r\n    if (currentSection.length > 0) {\r\n      sections.push(currentSection);\r\n    }\r\n\r\n    return sections.map((sectionLines, idx) => {\r\n      const sectionText = sectionLines.join('\\n');\r\n      if (!copyMode) {\r\n        // 通常モード\r\n        return (\r\n          <div\r\n            key={idx}\r\n            style={{ marginBottom: '1em' }}\r\n            dangerouslySetInnerHTML={{ __html: marked.parse(sectionText, { breaks: true }) }}\r\n          />\r\n        );\r\n      }\r\n      // コピーモード：セクション全体に hover/click イベント付与\r\n      return (\r\n        <div\r\n          key={idx}\r\n          style={{ cursor: 'pointer', marginBottom: '1em' }}\r\n          onMouseOver={(e) => (e.currentTarget.style.backgroundColor = '#ffffa0')}\r\n          onMouseOut={(e) => (e.currentTarget.style.backgroundColor = 'transparent')}\r\n          onClick={() => handleCopySection(sectionText)}\r\n          dangerouslySetInnerHTML={{ __html: marked.parse(sectionText, { breaks: true }) }}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\r\n      {/* ヘッダー */}\r\n      <header\r\n        style={{\r\n          position: 'relative',\r\n          background: '#f5f5f5',\r\n          borderBottom: '1px solid #ccc',\r\n          padding: '10px 20px',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between'\r\n        }}\r\n      >\r\n        <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n          <button\r\n            onClick={() => navigate('/mypage')}\r\n            style={{\r\n              background: '#007BFF',\r\n              color: '#fff',\r\n              border: 'none',\r\n              padding: '8px 12px',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            ホームへ\r\n          </button>\r\n          <button\r\n            onClick={() => navigate(`/editor/${mindmapId}`)}\r\n            style={{\r\n              background: '#6c757d',\r\n              color: '#fff',\r\n              border: 'none',\r\n              padding: '8px 12px',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            Editorへ\r\n          </button>\r\n        </div>\r\n\r\n        <h3 style={{ margin: 0, fontSize: '20px' }}>\r\n          {mindmap.title} - Export\r\n        </h3>\r\n\r\n        <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n          {/* コピーモード切替 */}\r\n          <button\r\n            onClick={() => setCopyMode(!copyMode)}\r\n            style={{\r\n              background: copyMode ? '#dc3545' : '#28a745',\r\n              color: '#fff',\r\n              border: 'none',\r\n              padding: '8px 16px',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            {copyMode ? 'コピーモードOFF' : 'コピーモードON'}\r\n          </button>\r\n          {/* ★ 追加：全てコピーするボタン */}\r\n          <button\r\n            onClick={handleCopyAll}\r\n            style={{\r\n              background: '#ffc107',\r\n              border: 'none',\r\n              padding: '8px 16px',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            全てコピーする\r\n          </button>\r\n          \r\n        </div>\r\n      </header>\r\n\r\n      {/* 「コピーしました」メッセージ表示 */}\r\n      {copyMessage && (\r\n        <div\r\n          style={{\r\n            background: '#c3e6cb',\r\n            color: '#155724',\r\n            padding: '10px',\r\n            margin: '10px 20px',\r\n            borderRadius: '4px'\r\n          }}\r\n        >\r\n          {copyMessage}\r\n        </div>\r\n      )}\r\n\r\n      {/* メインコンテンツ (Markdown表示) */}\r\n      <main style={{ flexGrow: 1, overflowY: 'auto', padding: '20px' }}>\r\n        {renderMarkdownWithCopy(markdownText)}\r\n      </main>\r\n\r\n      {/* フッター */}\r\n      <footer\r\n        style={{\r\n          background: '#f5f5f5',\r\n          borderTop: '1px solid #ccc',\r\n          textAlign: 'center',\r\n          padding: '10px 20px'\r\n        }}\r\n      >\r\n        <small style={{ color: '#888' }}>\r\n          &copy; 2025 MindMap App. All rights reserved.\r\n        </small>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExportMarkdown;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}